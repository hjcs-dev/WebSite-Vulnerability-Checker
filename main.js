const axios = require('axios');
const cheerio = require('cheerio');

// Fonction pour vérifier les vulnérabilités de base
async function checkVulnerabilities(url) {
    try {
        const { data } = await axios.get(url);
        const $ = cheerio.load(data);

        // Analyse pour les injections SQL
        const sqlInjectionPatterns = ["' OR 1=1 --", "' OR 'a'='a"];
        const sqlInjectionDetected = sqlInjectionPatterns.some(pattern => {
            return data.includes(pattern);
        });

        // Analyse pour les failles XSS
        const xssPatterns = ['<script>', 'javascript:'];
        const xssDetected = xssPatterns.some(pattern => {
            return data.includes(pattern);
        });

        // Affichage des résultats
        console.log(`Scan results for ${url}:`);
        console.log(`- SQL Injection Vulnerability: ${sqlInjectionDetected ? 'Detected' : 'Not detected'}`);
        console.log(`- XSS Vulnerability: ${xssDetected ? 'Detected' : 'Not detected'}`);
    } catch (error) {
        console.error(`Error fetching the URL: ${error.message}`);
    }
}

// Exemple d'utilisation
const url = process.argv[2]; // URL passée en argument
if (url) {
    checkVulnerabilities(url);
} else {
    console.log('Please provide a URL as an argument.');
}
